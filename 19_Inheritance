{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOspP9I9Afc5uwLGz12RU0k"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import math\n","import cmath as im\n","import statistics as st\n","import random\n","import copy\n","\n","from datetime import date"],"metadata":{"id":"P-bDsNFtRSFZ","executionInfo":{"status":"ok","timestamp":1709595617296,"user_tz":-60,"elapsed":515,"user":{"displayName":"Naomi Cede√±o Manrique","userId":"07623801168020297088"}}},"execution_count":1,"outputs":[]},{"cell_type":"markdown","source":["# Inheritance"],"metadata":{"id":"FPWGmzhTVxHS"}},{"cell_type":"markdown","source":["Below is given a _Rectangle_ class that is created with the $x$ and $y$ coordinate of the top-left corner, a width $w$, and a height $h$. Now create a _Square_ class that inherits as much as possible from the _Rectangle_ class:\n","```\n","class Rectangle:\n","  def __init__( self , x, y, w, h ):\n","    self.x = x\n","    self.y = y\n","    self.w = w\n","    self.h = h\n","  \n","  def __repr__( self ):\n","    return \"[({},{}),w={},h={}]\".format( self.x, self.y, self.w, self.h )\n","\n","  def area( self ):\n","    return self.w * self.h\n","\n","  def circumference( self ):\n","    return 2*( self.w + self.h)\n","```"],"metadata":{"id":"TLlxcdLagzZ-"}},{"cell_type":"code","source":["class Rectangle:\n","  def __init__(self, x, y, w, h):\n","    self.x = x\n","    self.y = y\n","    self.w = w\n","    self.h = h\n","\n","  def __repr__(self):\n","    return f\"[({self.x}, {self.y}), w= {self.w}, h = {self.h}]\"\n","\n","  def area(self):\n","    return self.w * self.h\n","\n","  def circumference( self ):\n","    return 2*( self.w + self.h)\n","\n","class Square(Rectangle):\n","  def __init__(self, x, y, w):\n","    super().__init__(x, y, w, h = w)"],"metadata":{"id":"o56i3u-FXCsl"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["A _Rectangle_ and a _Square_ can be considered shapes. There are, of course, different kinds of shapes which are defined differently, but share with rectangles and squares that they have an area and circumference. Define an interface class _Shape_, of which _Rectangle_ and _Square_ are subclasses. Also define a class _Circle_ that you derive from _Shape_:"],"metadata":{"id":"SIGE21b_jgdt"}},{"cell_type":"code","source":["import math\n","\n","class Shape:\n","  def area(self):\n","    pass\n","\n","  def circumference(self):\n","    pass\n","\n","class Rectangle(Shape):\n","  def __init__(self, x, y, w, h):\n","    super().__init__()\n","\n","    self.x = x\n","    self.y = y\n","    self.w = w\n","    self.h = h\n","\n","  def __repr__(self):\n","    return f\"[({self.x}, {self.y}), w= {self.w}, h = {self.h}]\"\n","\n","  def area(self):\n","    return self.w * self.h\n","\n","  def circumference(self):\n","    return 2*( self.w + self.h)\n","\n","class Square(Rectangle):\n","  def __init__(self, x, y, w):\n","    super().__init__(x, y, w, h = w)\n","\n","class Circle(Shape):\n","  def __init__(self, radius):\n","    super().__init__()\n","\n","    self.radius = radius\n","\n","  def __repr__(self):\n","    return f\"Circle of radius {self.radius}\"\n","\n","  def circumference(self):\n","    return 2 * math.pi * self.radius\n","\n","  def area(self):\n","    return math.pi * (self.radius ** 2)"],"metadata":{"id":"nVO16098jyLx"},"execution_count":null,"outputs":[]}]}