{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPCs+S4aFn/y7nNrH7YeinU"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import math\n","import cmath as im\n","import statistics as st\n","import random\n","import copy\n","\n","from datetime import date"],"metadata":{"id":"P-bDsNFtRSFZ","executionInfo":{"status":"ok","timestamp":1709590997377,"user_tz":-60,"elapsed":772,"user":{"displayName":"Naomi Cedeño Manrique","userId":"07623801168020297088"}}},"execution_count":29,"outputs":[]},{"cell_type":"markdown","source":["Write a program that defines a variable weight. If weight is greater than 20\n","(kilo’s), print: “There is a $25 surcharge for luggage that is too heavy.” If weight is smaller than 20, print: “Have a safe flight!” If weight is exactly 20, print: “Pfew! The weight is just right!”:"],"metadata":{"id":"XAdZ7omhJX8a"}},{"cell_type":"code","source":["if weight < 20:\n","  print(\"Have a safe flight!\")\n","elif weight == 20:\n","  print(\"Pfew! The weight is just right!\")\n","else:\n","  print(\"There is a $25 surcharge for luggage that is too heavy.\")"],"metadata":{"id":"WY92l-qwJXql"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Grades are values between zero and 10 (both zero and 10 included), and are always rounded to the nearest half point. To translate grades to the American style, 8.5 to 10 become an $A$, 7.5 and 8 become a $B$, 6.5 and 7 become a $C$, 5.5 and 6 become a $D$, and other grades become an $F$. If the user enters a grade lower than zero or higher than 10, just give an error message. You do not need to handle the user entering grades that do not end in .0 or .5, though you may do that if you like – in that case, if the user enters such an illegal grade, give an appropriate error message. Implement this translation, whereby you ask the user for a grade, and then give the American translation:"],"metadata":{"id":"MtIbkJpxg84Y"}},{"cell_type":"code","source":["def american_grade():\n","  grade = float(input('Enter your score: '))\n","  parte_decimal = grade % 1\n","\n","  if((parte_decimal not in [0.0, 0.5]) | (grade < 0) | (grade > 10)):\n","    print('Invalid score. Enter a new number.')\n","  elif(8.5 <= grade <= 10):\n","    return 'A'\n","  elif(7.5 <= grade <= 8):\n","    return 'B'\n","  elif(6.5 <= grade <= 7):\n","    return 'C'\n","  elif(5.5 <= grade <= 6):\n","    return 'D'\n","  else:\n","    return 'F'"],"metadata":{"id":"115TOa4eduJs"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Can you spot the reasoning error in the following code?\n","\n","```\n","score = 98.0\n","\n","if score >= 60.0:\n","  grade = ' D '\n","elif score >= 70.0:\n","  grade = ' C '\n","elif score >= 80.0:\n","  grade = ' B '\n","elif score >= 90.0:\n","  grade = ' A '\n","else:\n","  grade = ' F '\n","print( grade )\n","```"],"metadata":{"id":"dxG9qcXFeiXa"}},{"cell_type":"code","source":["score = 98.0\n","\n","if score >= 90.0:\n","  grade = ' A '\n","elif score >= 80.0:\n","  grade = ' B '\n","elif score >= 70.0:\n","  grade = ' C '\n","elif score >= 60.0:\n","  grade = ' D '\n","else:\n","  grade = ' F '\n","\n","print(grade)"],"metadata":{"id":"omZM_d1NfL5t"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Ask the user to supply a string. Print how many different vowels there\n","are in the string. The capital version of a lower case vowel is considered to be the same vowel. y is not considered a vowel. Try to print nice output:"],"metadata":{"id":"b30EYGtrfMPY"}},{"cell_type":"code","source":["def dif_values():\n","  vowels = 'aeiou'\n","  string = input('Enter a word or phrase: ').lower()\n","  counter = 0\n","\n","  for i in vowels:\n","    if i in string:\n","      counter += 1\n","\n","  print(f'{\"There is\" if counter == 1 else \"\"} {\"There are \" if counter > 1 else \"\"}{\"There are not any\" if counter == 0 else \"\"}{counter if counter >= 1 else \"\"}{\" different\" if counter > 1 else \"\"} vowel{\"s\" if counter != 1 else \"\"} in this sentence.')"],"metadata":{"id":"FlUvI_x6fZs0"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["You can solve quadratic equations using the quadratic formula. Quadratic\n","equations are of the form $Ax^2 + Bx + C = 0$. Such equations have zero, one or two solutions. The first solution is $-B + \\sqrt{\\frac{(B^2 - 4AC))}{2A}}$. The second solution is $-B - \\sqrt{\\frac{(B^2 - 4AC))}{2A}}$. There are no solutions if the value under the square root is negative. There is one solution if the value under the square root is zero. Write a program that asks the user for the values of A, B, and C, then reports whether there are zero,\n","one, or two solutions, then prints those solutions:\n","\n","_Hint: To determine whether there are zero, one, or two solutions, first calculate $B^2 - 4AC$. If that is less than zero, there are no solutions (as you cannot take the square root of a negative number). If it is zero, there is only one solution. Otherwise, there are two solutions, as listed._"],"metadata":{"id":"euma7TzpfaDr"}},{"cell_type":"code","source":["a = int(input('Insert square coefficient: '))\n","b = int(input('Insert linear coefficient: '))\n","c = int(input('Insert the constant: '))\n","\n","def num_solutions(a, b, c):\n","  disc = pow(b, 2) - (4 * a * c)\n","\n","  if(disc > 0):\n","    print('There are two different solutions to the equation.')\n","  elif(disc == 0):\n","    print('There exists only one solution for the equation.')\n","  else:\n","    print('There are no real solutions to the equation.')\n","\n","num_solutions(a, b, c)"],"metadata":{"id":"AvWTEaMpgOv9"},"execution_count":null,"outputs":[]}]}