{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPqyS6PWyPUzMMM+LfB2wrn"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import math\n","import cmath as im\n","import statistics as st\n","import random\n","import copy\n","\n","from datetime import date"],"metadata":{"id":"P-bDsNFtRSFZ","executionInfo":{"status":"ok","timestamp":1709593412303,"user_tz":-60,"elapsed":336,"user":{"displayName":"Naomi Cedeño Manrique","userId":"07623801168020297088"}}},"execution_count":1,"outputs":[]},{"cell_type":"markdown","source":["Write code that for a string prints the indices of all of its vowels:"],"metadata":{"id":"c4pYOzDRa6zw"}},{"cell_type":"code","source":["def ind_vowel():\n","  word = input(\"Enter a word: \").lower()\n","\n","  for i in range(len(word)):\n","    if word[i] in \"aeiou\":\n","      print(f\"{word[i]} in index [{i}]\")"],"metadata":{"id":"25XKcmPpa6Ox"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Write code that uses two strings. For each character in the first string that has exactly the same character at the same index in the second string, you print the character and the index:"],"metadata":{"id":"Ia7VgET9a-fH"}},{"cell_type":"code","source":["def same_char_same_idx():\n","  x = input(\"Enter a phrase: \")\n","  y = input(\"Enter another phrase: \")\n","\n","  x = x[0:min(len(x), len(y))]\n","\n","  for i in range(len(x)):\n","    if x[i] == y[i]:\n","      print(f'Character \\\"{x[i]}\\, index [{i}]\"')"],"metadata":{"id":"aiCoyVPZbMmu"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Write a function that takes a string as argument, and creates a new string that is a copy of the argument, except that every non-letter is replaced by a space.\n","\n","_Hint: To write such a function, you will start with an empty string, and traverse the characters of the argument one by one. When you encounter a character that is acceptable, you add it to the new string. When it is not acceptable, you add a space to the new string. Note that you can check whether a character is acceptable by simple comparisons._"],"metadata":{"id":"bDc7g2LNbPYn"}},{"cell_type":"code","source":["def remove_special_char():\n","  x = input(\"Enter a phrase: \")\n","  x_val = ''\n","\n","  for i in x:\n","    if ((i.lower() >= 'a' and i.lower() <= 'z') or (i >= '0' and i <= '9')):\n","      x_val += i\n","    else:\n","      x_val += ' '\n","\n","  return x_val"],"metadata":{"id":"O5Ac-Jvdbcxa"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Pig Latin is a language game, where you move the first letter of the word to the end and prepend to it \"ay.\" Write an implement a function for the Pig Latin translator:"],"metadata":{"id":"yG1vP8O9bnNv"}},{"cell_type":"code","source":["def pig_latin():\n","  s = input(\"Enter a phrase: \").split()\n","\n","  for i in s:\n","    print(f'{i[1:len(i)]}{i[0]}ay')"],"metadata":{"id":"h56lXL2vbz6N"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["In the string _“How much woot would a wootchuck chuck if a wootchuck could chuck the woot”_ the word _wood_ is misspelled. Replace all occurrences of this spelling error with the correct spelling:"],"metadata":{"id":"2OijK2vNb85C"}},{"cell_type":"code","source":["string = \"How much woot would a wootchuck chuck if a wootchuck could chuck the woot\".replace(\"woot\", \"wood\")"],"metadata":{"id":"IgoOGu76cFLq"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Display the contents of the string _\"Nobody expects the Spanish Inquisition!# In fact, those who do expect the Spanish Inquisition...\"_ up to, but not including, the hash mark (#):"],"metadata":{"id":"QpbAwkIGg4c0"}},{"cell_type":"code","source":["string = \"Nobody expects the Spanish Inquisition!# In fact, those who do expect the Spanish Inquisition...\"\n","string_find = string.find(\"#\")\n","string = string[:string_find]"],"metadata":{"id":"DJkHgaNMhCY2"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Write a program that prints a “cleaned” version of all the words in a string, where everything that is not a letter should be removed and be considered a separator:"],"metadata":{"id":"CEHIVA-8cLnI"}},{"cell_type":"code","source":["def cleaned_str():\n","  x = remove_special_char()\n","  x = x.split()\n","  return x"],"metadata":{"id":"9xyI_lLXcXq6"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Count how many of each vowel there are in a text string, and print the count for each vowel with a single formatted string:"],"metadata":{"id":"Rgj-hfZRnuV1"}},{"cell_type":"code","source":["def count_display_vowels():\n","  s = input(\"Enter a phrase: \")\n","\n","  vowels = 'aeiou'\n","  c = [0] * len(vowels)\n","\n","  for j in range(len(vowels)):\n","    for i in s:\n","      if i.lower() in vowels[j]:\n","        c[j] = c[j] + 1\n","\n","  print(f'A: {c[0]}\\nE: {c[1]}\\nI: {c[2]}\\nO: {c[3]}\\nU: {c[4]}')"],"metadata":{"id":"OAOiZjW-nzqf"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Below is a text with several characters enclosed in square brackets $[ and ]$.\n","Scan the text and print out all characters which are between square brackets:\n","\n","```\n","# text = \"\"\"And sending tinted postcards of places they don't realise they haven't even visited to 'All at nu[m]ber 22, weather w[on]derful, our room is marked with an 'X'. Wish you were here. Food very greasy but we've found a charming li[t]tle local place hidden awa[y]in the back streets where they serve Watney's Red Barrel and cheese and onion cris[p]s and the accordionist pla[y]s \"Maybe i[t]'s because I'm a Londoner\" 'and spending four days on the tarmac at Luton airport on a five-day package tour wit[h] n[o]thing to eat but dried Watney's sa[n]dwiches...\"\"\"\n","```"],"metadata":{"id":"LNfGmYn_n0Gx"}},{"cell_type":"code","source":["text = \"\"\"And sending tinted postcards of places they don't realise they haven't even visited to 'All at nu[m]ber 22, weather w[on]derful, our room is marked with an 'X'. Wish you were here. Food very greasy but we've found a charming li[t]tle local place hidden awa[y]in the back streets where they serve Watney's Red Barrel and cheese and onion cris[p]s and the accordionist pla[y]s \"Maybe i[t]'s because I'm a Londoner\" 'and spending four days on the tarmac at Luton airport on a five-day package tour wit[h] n[o]thing to eat but dried Watney's sa[n]dwiches...\"\"\"\n","text = text.strip()\n","\n","ac = []\n","cc = []\n","\n","for i in range(len(text)):\n","  if text[i] == \"[\":\n","    ac.append(i)\n","  if text[i] == \"]\":\n","    cc.append(i)\n","\n","for i in range(len(ac)):\n","  print(f\"{text[(ac[i]+1) : cc[i]]}\")"],"metadata":{"id":"e2E_7cCfsIYN"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Print a line of all the capital letters A to Z. Below it, print a line of\n","the letters that are 13 positions in the alphabet away from the letters that are above them:"],"metadata":{"id":"fSUZLORdon_e"}},{"cell_type":"code","source":["abc = []\n","abc_13 = []\n","\n","for i in range(ord(\"A\"), ord(\"Z\")):\n","  abc.append(chr(int(i))) ###"],"metadata":{"id":"QD2pgqddowD4"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Write a program that takes a string and produces a new string that contains\n","the exact characters that the first string contains, but in order of their ASCII-codes:"],"metadata":{"id":"kbDbNLBHpGEF"}},{"cell_type":"code","source":["x = \"Hello, world!\"\n","\n","ascii = []\n","new_x = \"\"\n","\n","for i in x:\n","  ascii.append(ord(i))\n","\n","ascii = sorted(ascii)\n","\n","for i in ascii:\n","  new_x += chr(i)"],"metadata":{"id":"RG3asRNopNYc"},"execution_count":null,"outputs":[]}]}