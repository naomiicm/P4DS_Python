{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNPf44AECJtjHwpgYdIS/kZ"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import math\n","import cmath as im\n","import statistics as st\n","import random\n","import copy\n","\n","from datetime import date"],"metadata":{"id":"P-bDsNFtRSFZ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Write a program that prints the numbers 1, 3, 5, 7, and 9:"],"metadata":{"id":"xPWAwjzQSeVJ"}},{"cell_type":"code","source":["n = 1\n","\n","while n < 10:\n","  if n % 2 != 0:\n","    print(n)\n","  n += 1\n","\n","print('Done')"],"metadata":{"id":"qjFAl2scSeEN"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Write a program that prints the total and the average of the five numbers:\n"],"metadata":{"id":"KZLgetixUyG0"}},{"cell_type":"code","source":["total = 0\n","s = 0\n","\n","while s < 5:\n","  total += float(input('Enter a number: '))\n","  s += 1\n","\n","avg = total / s\n","\n","print(f'Total: {total} \\nAverage: {avg}')"],"metadata":{"id":"jT3N22nhUx1k"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Write a program that prints the total of the five numbers, byt using a changing prompt to ask for each number:"],"metadata":{"id":"OkZ3UYdFV7cp"}},{"cell_type":"code","source":["total = 0\n","s = 0\n","\n","while s < 5:\n","  total += float(input(f'Enter the {s + 1}-th number: '))\n","  s += 1\n","\n","print(f'Total: {total}')"],"metadata":{"id":"qt1FjDABV79t"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Create a loop that lets the user enter some numbers until he enters zero, and\n","then prints their total and their average:"],"metadata":{"id":"24LfKNk4YAfN"}},{"cell_type":"code","source":["n = input('Enter a number: ')\n","\n","if n == '':\n","  n = 0\n","else:\n","  n = int(n)\n","\n","total = 0\n","c = 0\n","\n","while n != 0:\n","  total += n\n","  c += 1\n","  n = int(input('Enter a number: '))\n","\n","print(f'{f\"Total: {total}\" if total != 0 else \"No values were entered, try again.\"}')\n","\n","if c != 0:\n","  avg = total / c\n","  print(f'Average: {avg}')"],"metadata":{"id":"osU2nwVEYCqi"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Fix the code above so that it no longer is an endless loop:\n","\n","```\n","number = 1\n","total = 0\n","\n","while (number * number) % 1000 != 0:\n","  total += number\n","\n","print( \"Total is\", total )\n","```"],"metadata":{"id":"2l1D-1ykbP1R"}},{"cell_type":"code","source":["number = 1\n","total = 0\n","\n","while (number * number) % 1000 != 0:\n","  total += number\n","  number += 1\n","\n","print(\"Total is\", total)"],"metadata":{"id":"QcCcFBU4bYWJ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Write countdown code that starts with a given number and counts down to zero, printing each number it encounters. It does not print 0, instead it prints “Blast off!”:"],"metadata":{"id":"SRts6w19f967"}},{"cell_type":"code","source":["n = int(input('Enter an integer number: '))\n","\n","while n != 0:\n","  if n > 0:\n","    print(n)\n","    n -= 1\n","  else:\n","    print(n)\n","    n += 1\n","\n","print('Blast off!')"],"metadata":{"id":"v1SxL7RNgFch"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":[" Write some code that calculates the factorial of a number:\n","\n","_Hint: To do this with a while loop, you need one variable which at the end of the loop must contain the answer, and one variable that contains the current factor. In the loop, you multiply the answer with the current factor, before subtracting 1 from the factor. Choose the right initializations of these variables before the loop._"],"metadata":{"id":"mH__Z9fOhTNL"}},{"cell_type":"code","source":["n = int(input('Enter a natural number: '))\n","fact = 1\n","\n","while n > 0:\n","  fact *= n\n","  n -= 1\n","\n","print(f'Factorial is {fact}.')"],"metadata":{"id":"SqU9N3MYi4ht"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Set a function to print multiples of 3, starting at 21,\n","counting down to 3, in just two lines of code:"],"metadata":{"id":"PpSzBsoO5GAq"}},{"cell_type":"code","source":["for i in range(21, 2, -3):\n","  print(i)"],"metadata":{"id":"9PtZ8tbY5O4j"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Create code with a for loop that ask the user for five numbers and display their total:"],"metadata":{"id":"QIekvkLK8Iw0"}},{"cell_type":"code","source":["n_terms = 5\n","n = 0\n","total = 0\n","\n","for i in range(n_terms):\n","  n = float(input('Enter a number: '))\n","  total += n\n","\n","print(f'Total: {total}')"],"metadata":{"id":"9QVFGFmM8K4q"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["As before, reate a countdown function that starts at a certain count, and counts down to zero. Instead of zero, print “Blast off!”. This time, use a for loop:"],"metadata":{"id":"aTt4GG7t-FkU"}},{"cell_type":"code","source":["n = int(input('Enter an integer number: '))\n","\n","if n > 0:\n","  for i in range(0, n):\n","    print(n)\n","    n -= 1\n","else:\n","  for i in range(n, 0):\n","    print(n)\n","    n += 1\n","\n","print('Blast off!')"],"metadata":{"id":"VlVStSHj-LHU"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Write a program that processes a collection of numbers using a for loop. The\n","program should end immediately, printing only the word “Done,” when a zero is encountered (use a break for this). Negative numbers should be ignored (use a continue for this; I know you can also do this with a condition, but I want you to practice with continue). If no zero is encountered, the program should display the sum of all numbers (do this in an else clause). Always display “Done” at the end of the program:\n","\n","---\n","\n"],"metadata":{"id":"pD5rvkabCfEo"}},{"cell_type":"code","source":["def sum_only_positives(test_list):\n","  total = 0\n","\n","  for i in test_list:\n","    if i == 0:\n","      break\n","    elif i < 0:\n","      continue\n","    else:\n","      total += i\n","  else:\n","    print(f\"The sum of all the positive numbers is {total}\")\n","\n","  print(\"Done!\")"],"metadata":{"id":"OB2iJiI_CiKy"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Write code that prints all pairs $(i,j)$ where $i$ and $j$ can take on the values 0 to\n","3, but they cannot be equal."],"metadata":{"id":"IKXg0Crotm8k"}},{"cell_type":"code","source":["def not_equal_pairs(x):\n","  n = 0\n","  x = x + 1\n","\n","  for i in range(x):\n","    for j in range(x):\n","      if i != j:\n","        n += 1\n","        print(f'Pair {n}: ({i}, {j})')"],"metadata":{"id":"0XVOSkHFtqXT"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Given two numbers $A$ and $B$, compute the the result of $\\frac{A}{B}$ and $A\\%B$ not using the operators $/$ and $\\%$:"],"metadata":{"id":"xLmAqtiAyCE3"}},{"cell_type":"code","source":["def div_sin_div(x, y):\n","  c = 0\n","  c_res = 0\n","  res = 0\n","  dec = 0\n","\n","  while x - y >= 0:\n","    x = x - y\n","    c += 1\n","  else:\n","    res = x * 10\n","\n","    while res > 0:\n","      res = res - y\n","      c_res += 1\n","\n","  print(f'Division: {c + c_res * 0.1} \\nRemainder: {x}')"],"metadata":{"id":"s0eY2PYZxHFQ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Given a sequence of $n$ integers, display the sum and the mean of the even numbers in the sequence:"],"metadata":{"id":"dqYHe9BTyvH1"}},{"cell_type":"code","source":["n = int(input('Enter the number of terms: '))\n","\n","def seq_even(n):\n","  if n == 0:\n","    print('Enter a valid number.')\n","    exit()\n","  else:\n","    n_seq = []\n","\n","    for i in range(n):\n","      n_value = int(input(\"Enter an integer: \"))\n","      n_seq.append(n_value)\n","\n","    if all(x % 2 != 0 for x in n_seq):\n","      print('There are not even numbers')\n","      exit()\n","    else:\n","      e_sum = sum([x for x in n_seq if x % 2 == 0])\n","      e_mean = st.mean([x for x in n_seq if x % 2 == 0])\n","      print(f'Sum: {e_sum} \\nMean: {e_mean}')\n","\n","seq_even(n)"],"metadata":{"id":"Fc8AsmHOyvhm"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Given a sequence $n$ integers, display the sum and the mean of the numbers in the sequence that are even, multiple of 3 and larger than the previous number:"],"metadata":{"id":"Fiuspqoyy5H4"}},{"cell_type":"code","source":["def com_seq(n):\n","  if n == 0 or not isinstance(n, int):\n","    print(\"Sequence is empty, enter a valid number.\")\n","    exit()\n","  else:\n","    n_seq = []\n","    n_def = []\n","\n","  for i in range(n):\n","    n_val = int(input('Enter a number: '))\n","    n_seq.append(n_val)\n","\n","  for i in range(1, len(n_seq)):\n","    if n_seq[i] % 2 == 0 and n_seq[i] % 3 == 0 and n_seq[i] >= n_seq[i-1]:\n","      n_def.append(n_seq[i])\n","\n","  print(f'Sum: {sum(n_def)} \\nMean: {st.mean(n_def)}')"],"metadata":{"id":"s00GCYTWy4mr"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Write a program that lets the user enter a number, and displays the multiplication table for that number from 1 to 10:"],"metadata":{"id":"qP9KAN1MzDIq"}},{"cell_type":"code","source":["def mult_for():\n","  n = int(input('Enter a number: '))\n","\n","  for i in range(10):\n","    print(f'{n} * {i+1} = {n*(i+1)}')"],"metadata":{"id":"BRvauNkNzDfO"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["If you did the previous exercise with a while loop, then do it again with a\n","for loop. If you did it with a for loop, then do it again with a while loop:"],"metadata":{"id":"ZhfaVoxQ0f_u"}},{"cell_type":"code","source":["def mult_while():\n","  n = int(input('Enter a number: '))\n","  c = 1\n","\n","  while c <= 10:\n","    print(f'{n} * {c} = {n*c}')\n","    c += 1"],"metadata":{"id":"bqiAs9VM1HhE"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Write a program that asks the user for ten numbers, and then prints the\n","largest, the smallest, and how many are divisible by 3:"],"metadata":{"id":"qDovYX1Q3hli"}},{"cell_type":"code","source":["def max_min_mult3(x):\n","  seq = []\n","  c = 0\n","\n","  for i in range(x):\n","    n = int(input('Enter a number: '))\n","    seq.append(n)\n","\n","  max = seq[0]\n","  min = seq[0]\n","\n","  for i in range(x):\n","    if seq[i] >= max:\n","      max = seq[i]\n","    if seq[i] <= min:\n","      min = seq[i]\n","\n","    if seq[i] % 3 == 0:\n","      c += 1\n","\n","  print(f'Maximum: {max}\\nMinimum: {min}\\nDivisibles by 3: {c}')"],"metadata":{"id":"bpmrzh-73nk6"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["“99 bottles of beer” is a traditional song in the United States and Canada. It\n","is popular to sing on long trips, as it has a very repetitive format which is easy to memorize, and can take a long time to sing. The song’s simple lyrics are as follows: _“99 bottles of beer on the wall, 99 bottles of beer. Take one down, pass it around, 98 bottles of beer on the wall”_. The same verse is repeated, each time with one fewer bottle, and it is completed when the singer or singers reach zero. Write a program that generates the verses for $n$ bottles:"],"metadata":{"id":"3spbpA2Q3oB2"}},{"cell_type":"code","source":["def bottles_beer(n):\n","  while n > 0:\n","    if n != 1:\n","      print(f'{n} bottles of beer on the wall, {n} bottles of beer. Take one down, pass it around, {n - 1} bottle{\"s\" if n != 2 else \"\"} of beer on the wall.')\n","    else:\n","      print(f'{n} bottle of beer on the wall, {n} bottle of beer. Take one down, pass it around, {n - 1} bottles of beer on the wall.')\n","    n -= 1\n","  else:\n","    print(\"There's no bottles!\")"],"metadata":{"id":"cTplvCOA4Dly"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["\n","The Fibonacci sequence is a sequence of numbers that starts with 1, followed\n","by 1 again. Every next number is the sum of the two previous numbers. Write a program that calculates and prints the Fibonacci sequence until the numbers get higher than 1000:"],"metadata":{"id":"WN7Oj6Hb4EFp"}},{"cell_type":"code","source":["n0 = 1\n","print(f'{n0}')\n","\n","n1 = 1\n","print(f'{n1}', end = \"\")\n","\n","fib = 0\n","\n","while fib < 1000:\n","  print(f'{\"\" if fib == 0 else fib}')\n","\n","  fib = n0 + n1\n","  n0 = n1\n","  n1 = fib"],"metadata":{"id":"chpt-bTy4LyD"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Write a program that asks the user for two words. Then print all the characters\n","that the words have in common:\n","\n","_Hint: Gather the characters in a third string, and when you find a character that the two words have in common, check if it is already in the third string before reporting it._"],"metadata":{"id":"w88zw0cB4MGx"}},{"cell_type":"code","source":["def n_common_chars():\n","  x = input('Enter a phrase: ')\n","  y = input('Enter another phrase: ')\n","\n","  gathered = x + y\n","  unique_gathered = []\n","  c = 0\n","\n","  for i in gathered:\n","    if i not in unique_gathered:\n","      unique_gathered.append(i)\n","\n","  for i in unique_gathered:\n","    if i in x and i in y:\n","      c += 1\n","\n","  print(c)"],"metadata":{"id":"Zq77l27w4gWc"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Considering a square measuring 1 by 1. If you throw a dart into that square in a random location, the probability that it will have a distance of 1 or less to the lower left corner is $\\frac{\\pi}{4}$. To see why that is, remember that the area of a circle with a radius of 1 is $\\pi$, so the area of a quarter circle is $\\frac{\\pi}{4}$. Thus, if a dart lands in a random point in the square, the chance that it lands in the quarter circle with its centre at the lower left corner is $\\frac{\\pi}{4}$. Therefore, if you throw $N$ darts into the square, and $M$ of those land inside a distance of 1 to the lower left corner, then $\\frac{4M}{N}$ approximates $\\pi$ if $N$ is very large. The program holds a constant that determines how many darts it will simulate. It prints an approximation of $\\pi$ derived by simulating the throwing of that number of darts. Write a program that approximates the area of the circle by using random numbers:"],"metadata":{"id":"lY9WYP0W4gt6"}},{"cell_type":"code","source":["def aprox_pi(n):\n","  m = 0\n","\n","  for i in range(n):\n","    x = random.random()\n","    y = random.random()\n","\n","    if math.sqrt((x ** 2) + (y ** 2)) <= 1:\n","      m += 1\n","\n","  res = (4 * m) / n\n","  print(res)"],"metadata":{"id":"MGcH0C2D5dv0"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Write a program that takes a random integer between 1 and 1000. The program then asks the user to guess the number. After every guess, the program will say either “Lower” if the number it took is lower, “Higher” if the number it took is higher, and “You guessed it!” if the number it took is equal to the number that the user entered, and display how many guesses the user needed:"],"metadata":{"id":"AxkWPxto5eBj"}},{"cell_type":"code","source":["def guess_the_number(ini, end):\n","  guess = random.randint(ini, end)\n","  g_user = ini-1\n","\n","  while (g_user != guess):\n","    g_user = int(input(f\"Enter a number between {ini} and {end}:\"))\n","    if(g_user > end or g_user < ini):\n","      print(f\"Try with a integer number between {ini} and {end}.\")\n","      continue\n","    else:\n","      if g_user > guess:\n","        print(\"Lower.\")\n","      elif  g_user == guess:\n","        print(\"You guessed it!\")\n","      else:\n","        print(\"Higher.\")"],"metadata":{"id":"j_m-KPrj6AdH"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Write a program that is the opposite of the previous one: now you take\n","a number in mind, and the computer will try to guess it. You respond to the computer guesses by entering a letter: “L” for lower if the number to guess is lower, “H” for higher if the number to guess is higher, and “C” for correct. Make sure that you let the computer recognize when there is no answer. Once the computer has guessed your number, display how many guesses it needed:"],"metadata":{"id":"dhw_38aG6Auy"}},{"cell_type":"code","source":["def guess_the_number_pc():\n","\n","  ini = int(input(\"Ingrese el rango mínimo para la adivinanza:\"))\n","  end = int(input(\"Ingrese el rango máximo para la adivinanza:\"))\n","  g_user = int(input(\"Ingrese un número:\"))\n","\n","  guess = random.randint(ini, end)\n","  print(f\"The number proposed by the PC is {guess}.\")\n","\n","  while(g_user != guess):\n","    if g_user > end or g_user < ini:\n","      print(f\"Enter a number between {ini} and {end}.\")\n","      break\n","\n","    res_user = input(\"Status of the guessing:\")\n","\n","    if res_user == \"L\":\n","      guess = random.randint(ini, guess)\n","      print(f\"The number proposed by the PC is {guess}.\")\n","    elif res_user == \"C\":\n","      break\n","    elif res_user == \"H\":\n","      guess = random.randint(guess, end)\n","      print(f\"The number proposed by the PC is {guess}.\")\n","    else:\n","      print(\"Enter a valid status.\")\n","      continue\n","  else:\n","    print(\"You guessed it!\")"],"metadata":{"id":"7sCWaRRR6Vu1"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Write a program that asks the user for a number and then displays whether or not it is prime:\n","\n","_Hint: In a loop where you test the possible dividers of the number, you can conclude that the number is not prime as soon as you encounter a number other than 1 or itself that divides it. However, you can only conclude that it actually is prime after you have tested all possible dividers._"],"metadata":{"id":"kt2EMIhn6WCz"}},{"cell_type":"code","source":["def is_prime(n):\n","  div = 0\n","\n","  for i in range(2, n):\n","    if n % i == 0:\n","      print(\"Not prime.\")\n","      break\n","  else:\n","    print(\"Prime\")"],"metadata":{"id":"Hu6fsg726mSJ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["A multiplication table for the numbers 1 to $n = 3$ looks as follows:\n","\n",". | 1 2 3\n","\n","\\- - - - - - - -\n","\n","1 | 1 2 3\n","\n","2 | 2 4 6\n","\n","3 | 3 6 9\n","\n","So the labels on the rows are multiplied by the labels on the columns, and the result is shown in the cell that is on that row/column combination. Write a program that prints a multiplication table for digits 1 to a certain\n","number $n$:"],"metadata":{"id":"odmYsQx66msB"}},{"cell_type":"code","source":["def sym_mat(n):\n","  if isinstance(n, int) == False or n < 0:\n","    print(\"Enter a positive integer number.\")\n","    exit()\n","\n","  for i in range(0, n+1):\n","    if i == 0:\n","      first_row = str([m for m in range(1, n+1)]).replace(\",\", \"\\t\").replace(\"[\", \"\").replace(\"]\", \"\")\n","      print(f\".\\t|\\t{first_row}\")\n","      print((n+2)*\"---\\t\")\n","    else:\n","      row = str([m*i for m in range(1, n+1)]).replace(\",\", \"\\t\").replace(\"[\", \"\").replace(\"]\", \"\")\n","      print(f\"{i}\\t|\\t{row}\")"],"metadata":{"id":"TdepDg1P_v6Q"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Write a program that displays all integers between 1 and 100 that can be\n","written as the sum of two squares. Produce output in the form of $z = x^2 + y^2$:"],"metadata":{"id":"S4998v0j_wPe"}},{"cell_type":"code","source":["def sum_of_two_squares(n):\n","  for k in range(1, (n + 1)):\n","    for i in range(1, (n + 1)):\n","      for j in range(1, (n + 1)):\n","        if k == ((i ** 2) + (j ** 2)) and i <= j:\n","          print(f\"{k} = {i}^2 + {j}^2\")"],"metadata":{"id":"R8g9el6DBFWF"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["You roll five six-sided dice, one by one. How big is the probability that the\n","value of each die is greater than or equal to the value of the previous die that you rolled? Determine the probability of success using a simulation of a large number of trials:"],"metadata":{"id":"P_OZyXJfBTGH"}},{"cell_type":"code","source":["def equal_greater_dices():\n","  n_dices = int(input(\"Enter the number of dices: \"))\n","  trials = int(input(\"Enter the number of trials: \"))\n","\n","  res = 0\n","  c = 0\n","  dices = []\n","\n","  for m in range(trials):\n","    for i in range(n_dices):\n","      res = random.randint(1, 6)\n","      dices.append(res)\n","\n","    greater = len([dices[i] for i in range(1, len(dices)) if dices[i] >= dices[i-1]])\n","    dices = []\n","\n","    if greater == 4:\n","      c += 1\n","\n","  print(c/trials)"],"metadata":{"id":"-tGKRkKxBZ9D"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["A, B, C, and D are all different digits. The number DCBA is equal to 4 times\n","the number ABCD. Write a program that shows what are the digits:\n","\n","_Hint: to make ABCD and DCBA conventional\n","numbers, neither A nor D can be zero. Use a quadruple-nested loop._"],"metadata":{"id":"MKg29lR_BaUT"}},{"cell_type":"code","source":["for i in range(1, 9):\n","  for j in range(0, 9):\n","    for k in range(0, 9):\n","      for l in range(1, 9):\n","        if ((i * 1000) + (j * 100) + (k * 10) + l) == (4 *((l * 1000) + (k * 100) + (j * 10) + i)):\n","          print(f'A = {l}\\nB = {k}\\nC = {j}\\nD = {i}\\n{i}{j}{k}{l} = 4 * {l}{k}{j}{i}')"],"metadata":{"id":"Eh3UGNKtBmo4"},"execution_count":null,"outputs":[]}]}